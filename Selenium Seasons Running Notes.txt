*******************************
Selenium Season -1 
********************************
23rd September Monday


https://www.selenium.dev/

Selenium automates browsers. That's it!


.NET/C#
Ruby
Java
JavaScript
Python


Automation --> conversion of TC's to Test Script using some tool or program (API)

Selenium is an API to automate Web apps .

How to download and add jar to java project ?


Previous Releases
Here you can find a more complete list of Selenium releases.

Latest 4.25.0 


Longterm stable version 3.141.59 

selenium-server-standalone-3.141.59.jar

right click on project --> Build path --> Configure build path --> 
Click on "Libraries" --> Click on "classpath" --> click on "add external jars"
browse to the location where you have downloaded the jar 
select the jar or jars 
click oprn
click apply
click apply and close 

ChromeDriver(C)

ChromeDriver()
ChromeDriver(ChromeDriverService)
ChromeDriver(ChromeDriverService, ChromeOptions)
ChromeDriver(ChromeOptions)


Exception in thread "main" java.lang.IllegalStateException:
 The path to the driver executable must be set by the webdriver.chrome.driver system property; 
 for more information, see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver. The latest version can be downloaded from http://chromedriver.storage.googleapis.com/index.html


chrome browser version : 129 



https://github.com/bonigarcia/webdrivermanager

https://github.com/bonigarcia/webdrivermanager/releases/tag/webdrivermanager-5.9.2

selenium-server-4.13.0.jar

????????????????????????????????????
Assisgnment 1

Use the 3 approaches to launch 

approach 1 : 

selenium 3.141.59

approach 2:

selenium 3.141.59 + webdriver manager 

approach 3 :

selenium 4.13.0

firefox 
and Edge browser 


???????????????????????????????????????

********************************
24th September Tuesday
********************************

---------------------------------------
Methods in WebDriver (13) + 5 sub interfaces 

Navigation
Options
TargetLocator
Timeouts
Window

-----------------------------------
--------------------------------------------------------------------
get(String):void 
this is used to launch web app whose URL is given in form of String
---------------------------------------------------------------------
close():void 
this is used to close a window a tab on which webdriver focus is 
----------------------------------------------------------------------
quit():void 
this is used to close all the windows or tabs opened during that session
------------------------------------------------------------------------
Q : diff b/w close and quit 

1) close will close only one  window a tab on which webdriver focus is 
   quit will close all the windows or tabs opened during that session
2) close will not kill the chromedriver.exe 
   quit will kill the chromedriver.exe 
--------------------------------------------------------------------------
getTitle():String 
this will return the title of the page/window/tab in form of String 
---------------------------------------------------------------------------
getCurrentUrl():String
this will return the url present in address bar in form of String 
----------------------------------------------------------------------------
getPageSource():String 
this will return the page source (html code) in form of String 
----------------------------------------------------------------------------
getWindowHandle():String 

this will return the handle or window id of window a tab on which webdriver focus is
500F4997F1E5669357FAA76964103101

------------------------------------------------------------------------------
getWindowHandles():Set<String>
this will return the window ids of all the windows or tabs opened till point 
[398488ADA036BC09C799D439C32E27F8, 7F73494B4AA8DC65FA33DC5F7CA7C0EE]
---------------------------------------------------------------------------------
manage():Options

used to manage following things
- window sizes 
   maximize ==> driver.manage().window().maximize();
- cookies handling 
- waits or synchronization

----------------------------------------------------------------------------------------

********************************
25th September Wednesday
********************************

navigate():Navigation

back()
forward()
refresh()
to(String)
to(URL)
----------------------------------------------------

switchTo():TargetLocator

this is used to switch the webdriver focus from 

-> page/window/tab  to another page/window/tab
-> page to frame 
-> frame to page
-> page to alert 


activeElement()
alert()
defaultContent()
frame(int)
frame(String)
frame(WebElement)
newWindow(WindowType)
parentFrame()
window(String)

----------------------------------------------------------------

findElement(By):WebElement 


By class methods or Locators (8)

className(String)
cssSelector(String)
id(String)
linkText(String)
name(String)
partialLinkText(String)
tagName(String)
xpath(String)

HTML Terminologies

<tagname attribute1="value of attribute1" attribute2="value of attribute2"  ...attributen="value of attributen">

<tagName attribute1="value of attribute1"  ...attributen="value of attributen">text on element</tagName>


<input type="text" name="username" id="username" class="login_input" value="" fdprocessedid="s9449">

<a href="Register.php">New User Register Here</a>


Based on attributes (3) :

id(String)
name(String)
className(String)


Based on linktext of links :

hint : for links the tagname is a , anchor tag 

linkText(String)

partialLinkText(String)


Based on combintaion of tagname and/or attributes and/or text :

xpath(String) 

//*[@id="username"]
/html/body/div[2]/table/tbody/tr/td[2]/table/tbody/tr[4]/td/table/tbody/tr[1]/td[2]/table/tbody/tr[4]/td/a/img
//input[@id='username']


cssSelector(String):

tagName(String)



--------------------------------------------------------------------

findElements(By)





